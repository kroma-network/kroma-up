# Network to run the node on ("mainnet")
NETWORK_NAME=mainnet

IMAGE_TAG__KROMA_GETH=v0.6.1
IMAGE_TAG__KROMA_NODE=v2.1.1
IMAGE_TAG__KROMA_VALIDATOR=v2.1.1
IMAGE_TAG__KROMA_ZKEVM_PROVER_PROXY=v0.1.3
IMAGE_TAG__KROMA_ZKEVM_PROVER=v0.1.6
IMAGE_TAG__SP1_WITNESS_GEN=v1.0
IMAGE_TAG__SP1_PROVER_PROXY=v1.0

# L1 RPC endpoint.
# You can check and use one of the list of RPC endpoints: https://chainlist.org/chain/1
# Or you can also use Alchemy or Infura, etc.
# After Ecotone activation, you need also L1 Beacon endpoint to get blob data.
# You must use a websocket RPC endpoint to run a validator node for below reasons:
# As an asserter, to respond if a challenge is created to the output you submitted.
# As a challenger, to observe output submission events and create challenge to an invalid output.
KROMA_NODE__L1_BEACON_ENDPOINT=
KROMA_NODE__L1_RPC_ENDPOINT=
KROMA_VALIDATOR__L1_RPC_ENDPOINT=

KROMA_GETH__BOOT_NODES=enode://acf4af39e9d9f3bbdb700315fde6e909efc714bd9a012b0f6943c4f9110008e3da2cb6c2ac9d3b6d98184a5ead57c4409be4ae7b19da1f554ceee7ba86c1fc2e@p2p-0.kroma.network:30304?discport=30303,enode://a3b6a7087b3399eefdb1ce5870aa0e58a60bfeccf3f7f7c02f5e142b1a544d19c171f7688d08db786d5e9b3ba734482bf8cf29dab7d46917b9da7f61656fde39@p2p-1.kroma.network:30304?discport=30303
KROMA_NODE__BOOT_NODES=enr:-J24QIRQ_Sxsn08UW2djuM7XIiKMqDnjIRmZV3Y82aBxI396bIligpv716MNmEDitgiNzTYLx9pWVBZUmBLGZao3cJKGAYpjUHvsgmlkgnY0gmlwhA3RbWiHb3BzdGFja4P_AQCJc2VjcDI1NmsxoQO6Fg_lxKa4bqrCTRndRjP6V0Ahh_CduFC4c4khUSiRK4N0Y3CCIyuDdWRwgiMr,enr:-J24QJ0TyKGwcMuY4PCVe7Qo77pSMMkFHMHHZG5IZTtfURttM7by94vRPmFZzlteuCESo8KQC7GxEUKtRxK9dXQpvpGGAYpjUH99gmlkgnY0gmlwhAMldxyHb3BzdGFja4P_AQCJc2VjcDI1NmsxoQJXGyNhwNUSIdGsWbLChN6a47_bfRBFlFCARgjHnl6r-YN0Y3CCIyuDdWRwgiMr

# Historical RPC endpoint. If you want to set up your own historical RPC node, then replace it with your endpoint.
KROMA_GETH__HISTORICAL_RPC=https://api-historical.mainnet.kroma.network

# If you choose not to migrate to MPT, set this to true.
KROMA_GETH__DISABLE_MPT_MIGRATION=false

#===========================================================================#
#     ↓ The following settings are used to act as a Kroma-validator ↓       #
#===========================================================================#

# To run a validator, Account's PRIVATE_KEY or MNEMONIC and HD_PATH is/are required.

# If you are using MNEMONIC and HD_PATH, enter them here
KROMA_VALIDATOR__MNEMONIC=
KROMA_VALIDATOR__HD_PATH=

# If you are using PRIVATE_KEY, enter them here
KROMA_VALIDATOR__PRIVATE_KEY=

# Kroma-validator as an output submitter. If you want to submit an L2 output in public round, set KROMA_VALIDATOR__ALLOW_PUBLIC_ROUND true.
KROMA_VALIDATOR__OUTPUT_SUBMITTER_ENABLED=true
KROMA_VALIDATOR__ALLOW_PUBLIC_ROUND=false

# Kroma-validator as a challenger.
# Challenger is disabled by default. If you want to run a challenger, you need to run a Kroma-prover as well.
KROMA_VALIDATOR__CHALLENGER_ENABLED=false

# Kroma-validator as a guardian.
# Guardian is disabled by default. Guardian is only for Security Council.
KROMA_VALIDATOR__GUARDIAN_ENABLED=false

# Kroma-prover is required if the challenger is enabled.
# This is deprecated after transition to zkVM fault proof at Kroma MPT upgrade.
# The RPC endpoint of Kroma-prover for zkEVM proof generation.
KROMA_VALIDATOR__ZKEVM_PROVER_PROXY_RPC=http://kroma-prover-proxy:6000

# SP1-prover-proxy and SP1-witness-generator are required if the challenger is enabled.
# The RPC endpoint of SP1-prover-proxy for zkVM fault proof generation.
KROMA_VALIDATOR__ZKVM_PROVER_PROXY_RPC=http://sp1-prover-proxy:3031

# The RPC endpoint of SP1-witness-generator for zkVM witness generation.
KROMA_VALIDATOR__ZKVM_WITNESS_GENERATOR_RPC=http://sp1-witness-gen:3030

#===================================================================#
#    ↓ The following settings are used for Kroma-Prover-Proxy ↓     #
#      This is deprecated after KromaMPT hard fork upgrade.         #
#===================================================================#
# We recommend to use the values provided by default
KROMA_PROVER_PROXY__PROVER_BASE_DIR=/.prover/proofs
KROMA_PROVER_PROXY__PROVER_URL_SCHEMA=http
KROMA_PROVER_PROXY__PROVER_RPC_PORT=3030

# If you are using aws access key, you must enter it.
KROMA_PROVER_PROXY__AWS_REGION=
KROMA_PROVER_PROXY__AWS_ACCESS_KEY_ID=
KROMA_PROVER_PROXY__AWS_SECRET_ACCESS_KEY=

# Currently, Kroma-prover-proxy only supports AWS, so you'll need to enter the AWS EC2 instance ID where the Kroma-prover is running.
KROMA_PROVER_PROXY__PROVER_INSTANCE_ID=

# You need to specify in which network environment the Kroma-prover-proxy will call Kroma-prover.
# If Kroma-prover-proxy and Kroma-prover are on the same network, set it to `private` so that the communication is internal.
# However, if they are on different networks, set it to `public` so that Kroma-prover can utilize the Public IP of the instance it is running on.
KROMA_PROVER_PROXY__PROVER_ADDRESS_TYPE=


#===========================================================================================#
#    ↓ The following settings are used for SP1-Prover-Proxy and SP1-Witness-Generator ↓     #
#      This is used after the KromaMPT hard fork upgrade.                                   #
#===========================================================================================#
# API key in order to use SP1's prover network.
# Need to be issued from Succinct team.
SP1_PROVER_PROXY__PRIVATE_KEY=

# Configuration for running a Witness generator.
# !!! IMPORTANT !!!
# L1_RPC and L2_RPC must have the debug API enabled.
# This is a critical requirement for proper functionality.
SP1_WITNESS_GEN__L1_RPC=
SP1_WITNESS_GEN__L1_BEACON_RPC=
SP1_WITNESS_GEN__L2_RPC=
SP1_WITNESS_GEN__L2_NODE_RPC=

# Represents the maximum batch interval for the batcher.
# The relationship between MAX_BATCH_POST_DELAY_MIN and BATCHER_MAX_CHANNEL_DURATION is:
# MAX_BATCH_POST_DELAY_MIN = BATCHER_MAX_CHANNEL_DURATION * 12 / 60.
SP1_WITNESS_GEN__MAX_BATCH_POST_DELAY_MIN=20

# If running the witness generator before the MPT time, ensure ROLLUP_CONFIG_FROM_FILE is set to true.
# Check the MPT time for each network.
SP1_WITNESS_GEN__ROLLUP_CONFIG_FROM_FILE=true

# Set SKIP_SIMULATION to true to enable self-verification of the generated witness.
# If your system has fewer than 8 CPU cores, it is recommended to set it to false.
SP1_WITNESS_GEN__SKIP_SIMULATION=false
